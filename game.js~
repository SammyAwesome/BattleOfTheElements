///////////////////////////////////////////////////////////////
//                                                           //
//                    CONSTANT STATE                         //

// TODO: DECLARE and INTIALIZE your constants here
var START_TIME = currentTime();
var handIndex= 1
var rowIndex= 1
var earthArenaTexture = loadImage("earthArenaBG.jpg")
var Card1Holders = []
var Card2Holders = []
var hand = []
var cards = {
trox:{name:"trox",element:"earth",rarity:4,attack:97,defense:99,creative:97,agility:89,effect1:"defenseBOOST3",effect2:"teamGame2"},
riota:{name:"riota",element:"fire",rarity:4,attack:99,defense:85,creative:97,agility:98,effect1:"attackBOOST3",effect2:"stategy2"},
eska:{name:"eska",element:"water",rarity:4,attack:97,defense:89,creative:99,agility:91,effect1:"creativeBOOST3",effect2:"revive2"},
brisk:{name:"brisk",element:"air",rarity:4,attack:91,defense:92,creative:94,agility:99,effect1:"speedBOOST3",effect2:"death2"},
lyca:{name:"lyca",element:"light",rarity:4,attack:91,defense:98,creative:97,agility:98,effect1:"avoid3",effect2:"speedBOOST2"},
zye:{name:"zye",element:"darkness",rarity:4,attack:99,defense:95,creative:99,agility:91,effect1:"revive3",effect2:"attackBOOST2"},
xena:{name:"xena",element:"magic",rarity:4,attack:98,defense:99,creative:98,agility:97,effect1:"dom3",effect2:"death3"},


}
var cardRow = 3
var handCards = []
var deckCards = [cards.trox,cards.riota,cards.xena,cards.eska,cards.brisk,cards.lyca,cards.zye]
var graveCards = []
var row1Cards = []
var row2Cards = makeArray(4)

for(var r = 0;r<2;r++){
	for(var c = 0; c<5 - r; c++){
		insertBack(Card1Holders, {x:(c-2+r/2)* 200 + (screenWidth/2) - 75,y: (screenHeight/8)*(r+1)+ 600, color:makeColor(1,1,1)})
	}
}
for(var r = 0;r<2;r++){
	for(var c = 0; c<5 - r; c++){
		insertBack(Card2Holders, {x:(c-2+r/2)* 200 + (screenWidth/2) -75,y: 250 -((screenHeight/8)*(r-1)), color:makeColor(.9,.3,.3)})
	}
}
for(var i = 0; i<5;i++){
	insertBack(hand, {x:screenWidth/2 + (i - 2) * 170 - 75, y:screenHeight - 150, color:makeColor(.5,.5,.5)})
}
///////////////////////////////////////////////////////////////
//                                                           //
//                     MUTABLE STATE                         //

// TODO: DECLARE your variables here
var lastKeyCode;

///////////////////////////////////////////////////////////////
//                                                           //
//                      EVENT RULES                          //

// When setup happens...
function onSetup() {
    // TODO: INITIALIZE your variables here
    lastKeyCode = 0;
}


// When a key is pushed
function onKeyStart(key) {
    lastKeyCode = key;
	
	if(key == 38 && cardRow >=2){
		cardRow--
		
		
	}
	if(key == 40 && cardRow <=2){
		cardRow++
		if(cardRow == 2 && rowIndex==5){
			rowIndex = 4
		}
	}
	if(key > 48 && key < 54){
		if(cardRow == 3){
			handIndex =  key - 48
		}else{
			rowIndex = key - 48
		}
		
		
	}
	if(key == 37){
		if(cardRow == 3){
			 if(handIndex >1) {
				handIndex--	
			}
		}else {
			if(rowIndex > 1){
				rowIndex--
				
			}
		}
		
		
	}
	if(key == 39){
		if(cardRow == 3){
			if(handIndex <4 + (cardRow-2)){
				handIndex++
				
			}
			
		}else{
			if(rowIndex <4 + (2 - cardRow)){
				rowIndex++
			}
		}
	}
	if(key == 13  && cardRow == 2){
		row2Cards[rowIndex-1] = handCards[handIndex-1]
		removeAt(handCards, handIndex-1)
		
	}
	//console.log(cardRow)
	console.log(rowIndex)
}
function outlineCard(place){
	if(cardRow == 3){
		x=hand[place-1].x
		y = screenHeight - 150
		c = makeColor(0,0,0)
		//removeAt(handCards, (key - 49))
		strokePolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125],c, 12, true)
	}else if(cardRow == 2){
		r = 0
		x=(place-3+r/2)* 200 + (screenWidth/2) +25
		y =(screenHeight/4)+ 600
		c= makeColor(0,1,1)
		strokePolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125],c, 12, true)
	}else if(cardRow == 1){
		
		r = 1
		x=(place-4+r/2)* 200 + (screenWidth/2) +25
		y =(screenHeight/8)+ 600
		c= makeColor(1,0,0)
		strokePolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125],c, 12, true)
	}
//	console.log("hello")

//	yy = screenHeight/2
//	xx = screenWidth / 2
//	strokePolygon([xx,yy,xx+75,yy-25,xx+150,yy,xx+150,yy+125,xx+75,yy+150,xx,yy+125],c, 12)
	//console.log(y)
	
}

function outlineField(place){
/*	if(cardRow == 2){
		r = 0
		x=(place-3+r/2)* 200 + (screenWidth/2) - 75
		y =(screenHeight/8) * 2+ 600
		c= makeColor(0,1,1)
		strokePolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125],c, 12, true)
	}
	if(cardRow == 1){
		//	x:(c-2+r/2)* 200 + (screenWidth/2) - 75,y: (screenHeight/8)*(r+1)+ 600
		
		r = 1
		x=(place-3+r/2)* 200 + (screenWidth/2) * 2 - 75
		y =(screenHeight/4)+ 600
		c= makeColor(0,1,1)
		strokePolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125],c, 12, true)
	}
	*/
}
function onTouchStart(x,y){
    var startMouseX = x
    var startMouseY = y
    var moving = true
}
function onTouchEnd(x,y){
    var moving = false
    var newMouseX = x
    var newMouseY = y
}

function DragSquare(x,y){
    fillRectangle(x,y,100,100,makeColor(1,1,1))
}


function cardUnderMouse(x,y){
	var currentRow;
	var currentPlace;
	if(y < screenHeight/4 + 750 && y >screenHeight / 4 + 575){
		//((x-left)/screenWidth-2left)*4
		console.log("mid")
	    currentRow = 2
	    r = 0
	    currentPlace = (x- screenWidth/2 + 75) / 200 + 2 - r/2
	    currentPlace = floor(currentPlace)
	    
	}else if(y < screenHeight/8 + 750 && y >screenHeight / 8 + 575){
		console.log("front row")
	    currentRow = 1
	    
	    r= 1
	    currentPlace = (x- screenWidth/2 + 75) / 200 + 2 - r/2
	   currentPlace = floor(currentPlace)
	}
	
	if(y < screenHeight && y >screenHeight - 175){
		console.log("hand")
		currentRow = 3
	}
    console.log(currentPlace)
    
}
function receiveCard(){
	
	if(deckCards.length > 0 && handCards.length < 5){
		w = randomInteger(0,deckCards.length - 1)
		insertBack(handCards, deckCards[w])
		removeAt(deckCards, w)
	}
}
function drawCardHolders(card){
	var x = card.x
	var y = card.y
	var c = card.color
	fillPolygon([x,y,x+75,y-25,x+150,y,x+150,y+125,x+75,y+150,x,y+125, x,y],c)
}

function drawHand(){
	for(var i = 0; i < handCards.length; i++){
		fillText(handCards[i].name, screenWidth/2 + (i - 2) * 170, screenHeight - 150, makeColor(1, 1, 1), "30pt Baloo Bhaina", "center", "bold")
		
		fillText("cre: " + handCards[i].creative, screenWidth/2 + (i - 2) * 170 + 40, screenHeight - 80, makeColor(1, 1, 1), "18pt Baloo Bhaina", "center", "bold")
		fillText("agi:" + handCards[i].agility, screenWidth/2 + (i - 2) * 170 - 40, screenHeight - 80, makeColor(1, 1, 1), "18pt Baloo Bhaina", "center", "bold")
		fillText("def: " + handCards[i].defense, screenWidth/2 + (i - 2) * 170 + 40, screenHeight - 50, makeColor(1, 1, 1), "18pt Baloo Bhaina", "center", "bold")
		fillText("att: " + handCards[i].attack, screenWidth/2 + (i - 2) * 170- 40, screenHeight - 50, makeColor(1, 1, 1), "18pt Baloo Bhaina", "center", "bold")
		
	}
}
function drawBackRow(){
	for(var i = 0; i < row2Cards.length; i++){
		if(row2Cards[i] != undefined){
		
			fillText(row2Cards[i].name, (i-2+1/2)* 200 + (screenWidth/2) - 5, (screenHeight/4)+ 600, makeColor(0, 0, 0), "30pt Baloo Bhaina", "center", "bold")
		
			fillText("cre: " + row2Cards[i].creative, (i-2+1/2)* 200 + (screenWidth/2) + 35, (screenHeight/4)+ 670, makeColor(0, 0, 0), "18pt Baloo Bhaina", "center", "bold")
			fillText("agi:" + row2Cards[i].agility, (i-2+1/2)* 200 + (screenWidth/2) - 45, (screenHeight/4)+ 670, makeColor(0, 0, 0), "18pt Baloo Bhaina", "center", "bold")
			fillText("def: " + row2Cards[i].defense, (i-2+1/2)* 200 + (screenWidth/2) + 35, (screenHeight/4)+ 700, makeColor(0, 0, 0), "18pt Baloo Bhaina", "center", "bold")
			fillText("att: " + row2Cards[i].attack, (i-2+1/2)* 200 + (screenWidth/2) - 45, (screenHeight/4)+ 700, makeColor(0, 0, 0), "18pt Baloo Bhaina", "center", "bold")
		}	
	}
}
function onMouseMove(x,y){
	cardUnderMouse(x,y)
}
// Called 30 times or more per second
function onTick() {
//	console.log(handIndex)
    // Some sample drawing 
	sw2 = screenWidth/2
	
    fillRectangle(0,0,screenWidth,screenHeight,makeColor(51/255,32/255,8/255))
	drawImage(earthArenaTexture)
	fillPolygon([sw2 - 500, screenHeight, sw2 - 450, screenHeight - 160, sw2 + 450, screenHeight - 160, sw2 + 500, screenHeight], makeColor(240/255,230/255,140/255))
	fillPolygon([sw2 - 500, screenHeight, sw2 - 450, screenHeight - 160, sw2 + 450, screenHeight - 160, sw2 + 500, screenHeight], makeColor(240/255,230/255,140/255))
	//fillOval()
	drawCardHolders({x: 250, y:800,color:makeColor(0,0,0),type:"deck"})
	fillText("cards left: " + deckCards.length, 330, 950, makeColor(1,1,1),"30pt Baloo Bhaina", "center")
	drawCardHolders({x: screenWidth - 400, y:800,color:makeColor(0,0,0),type:"dead"})
	fillRectangle(0,0,200,screenHeight,makeColor(240/255,230/255,140/255))
	fillRectangle(screenWidth-200,0,screenWidth,screenHeight,makeColor(240/255,230/255,140/255))
	strokeLine(0,screenHeight/2,screenWidth, screenHeight/2,makeColor(240/255,230/255,140/255),12)
	receiveCard()
	
//	fillRectangle(screenWidth/2-400,screenHeight-200, 800, 200, makeColor(220/255,118/255,10/255))
	for(var i = 0; i < Card1Holders.length; i++){
		drawCardHolders(Card1Holders[i])
	}
	for(var i = 0; i < Card2Holders.length; i++){
		drawCardHolders(Card2Holders[i])
	}
	for(var i = 0; i < hand.length; i++){
		drawCardHolders(hand[i])
	}
	outlineField(rowIndex)
	if(cardRow==3){
		outlineCard(handIndex)
		
	}else{
		outlineCard(rowIndex)
		
	}
	drawHand()
        drawBackRow()
    if(moving == true){
	DragSquare(startMouseX,startMouseY
    }
  // strokeLine(screenWidth/2, 0, screenWidth/2, screenHeight, makeColor(1,1,1), 2)	
}


///////////////////////////////////////////////////////////////
//                                                           //
//                      HELPER RULES                         //
